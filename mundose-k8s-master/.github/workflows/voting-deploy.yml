name: VOTING DEPLOY

on:
  push:
    branches: [ "master" ]

  workflow_dispatch:
env:
  REGISTRY: roxsross12

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3   
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Version Commit SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV 
      - name: VOTE APP
        run: |
          cd vote
          docker build -t $REGISTRY/vote:$SHORT_SHA .
          docker push $REGISTRY/vote:$SHORT_SHA
      - name: RESULT APP
        run: |
          cd result
          docker build -t $REGISTRY/result:$SHORT_SHA .
          docker push $REGISTRY/result:$SHORT_SHA
      - name: WORKER APP
        run: |
          cd worker
          docker build -t $REGISTRY/worker:$SHORT_SHA .
          docker push $REGISTRY/worker:$SHORT_SHA
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      cluster: "test-cluster"
      namespaces: "msampano"

    steps:
      - uses: actions/checkout@v3
      - name: Version Commit SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV 
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - uses: azure/setup-kubectl@v3
        with:
           version: 'v1.25.9' # default is latest stable
        id: install
        
      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.cluster }} --region us-east-1

      - name: listar nodos
        run: kubectl get nodes -A

      # - name: Crear namespaces
      #   run: kubectl create ns ${{ env.namespaces }}

      - name: UPDATE IMAGE VOTE
        run: |
           cd kubernetes
           sed -i "s/TAG/$SHORT_SHA/g" vote-deploy.yaml
           cat vote-deploy.yaml
      - name: UPDATE IMAGE RESULT
        run: |
           cd kubernetes
           sed -i "s/TAG/$SHORT_SHA/g" result-deploy.yaml
           cat result-deploy.yaml           
      - name: UPDATE IMAGE WORKER
        run: |
           cd kubernetes
           sed -i "s/TAG/$SHORT_SHA/g" worker-deploy.yaml
           cat worker-deploy.yaml   

      - name: DEPLOY 
        run: |
          cd kubernetes
          kubectl apply -f . -n ${{ env.namespaces }}               